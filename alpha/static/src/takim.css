/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.pointer-events-none {
  pointer-events: none;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.bottom-auto {
  bottom: auto;
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.col-span-4 {
  grid-column: span 4 / span 4;
}
.col-span-5 {
  grid-column: span 5 / span 5;
}
.col-span-7 {
  grid-column: span 7 / span 7;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.-mt-\[300px\] {
  margin-top: calc(300px * -1);
}
.mr-auto {
  margin-right: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.size-\[1\.2em\] {
  width: 1.2em;
  height: 1.2em;
}
.h-2\/5 {
  height: calc(2/5 * 100%);
}
.h-3\/6 {
  height: calc(3/6 * 100%);
}
.h-fit {
  height: fit-content;
}
.h-full {
  height: 100%;
}
.h-max {
  height: max-content;
}
.h-screen {
  height: 100vh;
}
.max-h-fit {
  max-height: fit-content;
}
.min-h-screen {
  min-height: 100vh;
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.max-w-\[480px\] {
  max-width: 480px;
}
.max-w-full {
  max-width: 100%;
}
.max-w-none {
  max-width: none;
}
.max-w-screen {
  max-width: 100vw;
}
.flex-1 {
  flex: 1;
}
.flex-auto {
  flex: auto;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-2\/4 {
  --tw-translate-x: calc(calc(2/4 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.cursor-pointer {
  cursor: pointer;
}
.list-disc {
  list-style-type: disc;
}
.list-none {
  list-style-type: none;
}
.appearance-none {
  appearance: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-7 {
  grid-template-columns: repeat(7, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-around {
  justify-content: space-around;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.place-self-center {
  place-self: center;
}
.self-center {
  align-self: center;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-t-4 {
  border-top-style: var(--tw-border-style);
  border-top-width: 4px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
}
.border-b-4 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 4px;
}
.border-l-8 {
  border-left-style: var(--tw-border-style);
  border-left-width: 8px;
}
.border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
.bg-\[\#25d366\] {
  background-color: #25d366;
}
.bg-\[\#24292F\] {
  background-color: #24292F;
}
.bg-gradient-to-t {
  --tw-gradient-position: to top in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.fill-current {
  fill: currentcolor;
}
.object-scale-down {
  object-fit: scale-down;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.align-middle {
  vertical-align: middle;
}
.leading-none {
  --tw-leading: 1;
  line-height: 1;
}
.break-words {
  overflow-wrap: break-word;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.not-italic {
  font-style: normal;
}
.no-underline {
  text-decoration-line: none;
}
.opacity-40 {
  opacity: 40%;
}
.opacity-60 {
  opacity: 60%;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.duration-700 {
  --tw-duration: 700ms;
  transition-duration: 700ms;
}
.outline-none {
  --tw-outline-style: none;
  outline-style: none;
}
.group-focus\:ring-4 {
  &:is(:where(.group):focus *) {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.group-focus\:outline-none {
  &:is(:where(.group):focus *) {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.hover\:bg-\[\#24292F\]\/90 {
  &:hover {
    @media (hover: hover) {
      background-color: color-mix(in oklab, #24292F 90%, transparent);
    }
  }
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-4 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-\[\#24292F\]\/50 {
  &:focus {
    --tw-ring-color: color-mix(in oklab, #24292F 50%, transparent);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.focus-visible\:outline-none {
  &:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.rtl\:rotate-180 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    rotate: 180deg;
  }
}
.dark\:hover\:bg-\[\#050708\]\/30 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, #050708 30%, transparent);
      }
    }
  }
}
.text-container {
  height: 100vh;
  width: 100vh;
  font-weight: bold;
  font-size: clamp(1rem, 1vw, 2.5rem);
  position: relative;
  overflow: hidden;
  color: white;
}
.text-container>div {
  animation: come2life linear 15s infinite;
  transform-origin: center center;
  opacity: 0;
  height: 100vh;
  width: 100vh;
  position: absolute;
  backface-visibility: hidden;
}
.text-container>div:nth-child(1) {
  left: 10vw;
  top: 60vh;
  animation-delay: 0s;
}
.text-container>div:nth-child(2) {
  left: 70vw;
  top: 80vh;
  animation-delay: 4s;
}
.text-container>div:nth-child(3) {
  left: 50vw;
  top: 80vh;
  animation-delay: 8s;
}
.text-container>div:nth-child(4) {
  left: 60vw;
  top: 70vh;
  animation-delay: 6s;
}
.text-container>div:nth-child(5) {
  left: 90vw;
  top: 80vh;
  animation-delay: 2s;
}
.text-container>div:nth-child(6) {
  left: 70vw;
  top: 80vh;
  animation-delay: 10s;
}
.text-container>div:nth-child(7) {
  left: 40vw;
  top: 80vh;
  animation-delay: 12s;
}
.text-container>div:nth-child(8) {
  left: 80vw;
  top: 80vh;
  animation-delay: 14s;
}
@keyframes come2life {
  0% {
    transform: scale3d(0, 0, 1) rotate(0.02deg);
    opacity: 0;
    filter: blur(10px);
  }
  25% {
    transform: scale3d(1, 1, 1) rotate(0.02deg);
    opacity: o.5;
    filter: blur(4px);
  }
  40% {
    opacity: 1;
  }
  60% {
    opacity: 1;
    filter: blur(1px);
  }
  80% {
    opacity: .5;
  }
  100% {
    transform: scale3d(4, 4, 1) rotate(0.02deg);
    filter: blur(10px);
  }
}
#consentBox {
  background: #fff;
  padding: 6px;
  border-radius: 6px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  text-align: center;
}
#consentBox.hide {
  opacity: 0;
  pointer-events: none;
  transform: scale(0.8);
  transition: all 0.3s ease;
}
::selection {
  color: #fff;
  background: #229a0f;
}
#consentContent p {
  color: #858585;
  margin: 6px 0 6px 0;
}
#consentContent .buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 6px;
  font-size: 10px;
}
.consentButton, .rejectButton {
  padding: 6px 6px;
  border: none;
  outline: none;
  color: #fff;
  font-size: 10px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.consentButton {
  background: #2a910b;
  margin-right: 6px;
}
.rejectButton {
  color: #111211;
  background: transparent;
  border: 2px solid #099c2c;
  text-decoration: none;
}
#consentBox img {
  max-width: 90px;
}
#consentHeader {
  font-size: 10px;
  margin-top: 6px;
}
body.with-cookie-bar {
  padding-top: 35px;
}
.cookie-bar {
  position: fixed;
  width: 100%;
  top: 0;
  text-align: center;
  height: 25px;
  line-height: 25px;
  background: #eee;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
